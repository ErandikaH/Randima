/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package invoice;

import buyer.Buyer;
import buyer.BuyerForm;
import buyer.BuyerUtilities;
import buyerPayment.CashForm;
import de.javasoft.plaf.synthetica.SyntheticaBlueMoonLookAndFeel;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.KeyEvent;
import java.sql.SQLException;
import java.text.DateFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.UIManager;
import javax.swing.UnsupportedLookAndFeelException;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
import order.Order;
import order.OrderUtilities;
import order.ValidationOrder;
import orderDetail.OrderDetail;
import orderDetail.OrderDetailForm;
import orderDetail.OrderDetailUtilities;
import orderDetail.ValidationOrderDetail;
import product.Product;
import product.ProductForm;
import product.ProductUtilities;
import randimaexporters.MainMenu;

/**
 *
 * @author PC
 */
public class MakeOrder extends javax.swing.JDialog {

    int newQtyOnHand;
    int qtyOnHand;
    int qty;
    
    private MainMenu mm = null;

    /**
     * Creates new form MakeOrder1
     */
    public MakeOrder(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();

        ImageIcon icon = new ImageIcon(getClass().getResource("/buyer/Untitled-4.jpg"));

        jXImagePanel1.setImage(icon.getImage());

        javax.swing.Timer timer = new javax.swing.Timer(1000, new ActionListener() {

            @Override
            public void actionPerformed(ActionEvent e) {
                Date date = new Date();

                SimpleDateFormat format1 = new SimpleDateFormat("hh : mm : ss");
                String dateString = format1.format(date);
                timeLabel.setText(dateString);
            }
        });
        timer.start();

        Calendar currentDate = Calendar.getInstance();
        SimpleDateFormat formatter = new SimpleDateFormat("yyyy-MM-dd");
        String date = formatter.format(currentDate.getTime());
        dateLabel.setText(date);

        Utility u = new Utility();

        u.descriptionComboBId(buyerIdComboBox, "Select buyerId from Buyer");
        ComboUtil cu = new ComboUtil();
        cu.setSearchableCombo(buyerIdComboBox, true, "No Buyer");

        u.descriptionComboName(buyerNameComboBox, "Select buyerName from Buyer");
        ComboUtil cuName = new ComboUtil();
        cuName.setSearchableCombo(buyerNameComboBox, true, "No Buyer..");

        u.descriptionComboItem(productComboBox, "Select productDescription from Product");
        ComboUtil cuProduct = new ComboUtil();
        cuProduct.setSearchableCombo(productComboBox, true, "No Product");

        invoiceText.setText(Utility.getNextId("orderId", "Orders", "SLRE-CBQC-T001-D"));
        
        setLocationRelativeTo(null);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        addButton = new javax.swing.JButton();
        addressText = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        buyerIdComboBox = new javax.swing.JComboBox();
        buyerNameComboBox = new javax.swing.JComboBox();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel7 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        productComboBox = new javax.swing.JComboBox();
        qtyText = new javax.swing.JTextField();
        jSeparator2 = new javax.swing.JSeparator();
        jLabel10 = new javax.swing.JLabel();
        fullAmountText = new javax.swing.JTextField();
        dataBaseButton = new javax.swing.JButton();
        cancelButton = new javax.swing.JButton();
        jDateChooser1 = new com.toedter.calendar.JDateChooser();
        timeLabel = new javax.swing.JLabel();
        dateLabel = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable = new javax.swing.JTable();
        productButton = new javax.swing.JButton();
        payButton = new javax.swing.JButton();
        invoiceText = new javax.swing.JTextField();
        containerText = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        titleText = new javax.swing.JTextField();
        jXImagePanel1 = new org.jdesktop.swingx.JXImagePanel();
        invoiceButton = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        jPanel2.setBackground(new java.awt.Color(204, 236, 245));
        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Make Order"));

        jLabel1.setFont(new java.awt.Font("Agency FB", 1, 20)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 0, 204));
        jLabel1.setText("Make Order");

        addButton.setText("Add New Buyer");
        addButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addButtonActionPerformed(evt);
            }
        });

        jLabel5.setText("Delivery Date");

        buyerIdComboBox.setEditable(true);
        buyerIdComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] {}));
        buyerIdComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buyerIdComboBoxActionPerformed(evt);
            }
        });
        buyerIdComboBox.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                buyerIdComboBoxKeyReleased(evt);
            }
        });

        buyerNameComboBox.setEditable(true);
        buyerNameComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] {}));
        buyerNameComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buyerNameComboBoxActionPerformed(evt);
            }
        });
        buyerNameComboBox.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                buyerNameComboBoxKeyPressed(evt);
            }
        });

        jLabel2.setText("Buyer ID");

        jLabel3.setText("Buyer Name");

        jLabel4.setText("Address");

        jLabel7.setText("Select Product");

        jLabel9.setText("Qty");

        productComboBox.setEditable(true);
        productComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] {}));
        productComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                productComboBoxActionPerformed(evt);
            }
        });

        qtyText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                qtyTextActionPerformed(evt);
            }
        });
        qtyText.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                qtyTextKeyPressed(evt);
            }
        });

        jLabel10.setText("Full Amount");

        fullAmountText.setHorizontalAlignment(javax.swing.JTextField.RIGHT);

        dataBaseButton.setText("Add to DataBase");
        dataBaseButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dataBaseButtonActionPerformed(evt);
            }
        });

        cancelButton.setText("Cancel");
        cancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelButtonActionPerformed(evt);
            }
        });

        jTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Grade", "Description", "Bales Bages/Boxes", "Per KG", "Weight KG", "Price Per KGs", "Amount"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Object.class, java.lang.Double.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane2.setViewportView(jTable);

        productButton.setText("Add Product");
        productButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                productButtonActionPerformed(evt);
            }
        });

        payButton.setText("Pay");
        payButton.setEnabled(false);
        payButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                payButtonActionPerformed(evt);
            }
        });

        jLabel8.setText("Invoice No    :-");

        jLabel12.setText("Container No :-");

        jLabel6.setText("Buyer Title");

        javax.swing.GroupLayout jXImagePanel1Layout = new javax.swing.GroupLayout(jXImagePanel1);
        jXImagePanel1.setLayout(jXImagePanel1Layout);
        jXImagePanel1Layout.setHorizontalGroup(
            jXImagePanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 198, Short.MAX_VALUE)
        );
        jXImagePanel1Layout.setVerticalGroup(
            jXImagePanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 39, Short.MAX_VALUE)
        );

        invoiceButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/buyer/8.jpg"))); // NOI18N
        invoiceButton.setBorderPainted(false);
        invoiceButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                invoiceButtonActionPerformed(evt);
            }
        });

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/buyer/7.jpg"))); // NOI18N
        jButton1.setBorderPainted(false);
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(54, 54, 54)
                .addComponent(jLabel7)
                .addGap(18, 18, 18)
                .addComponent(productComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel9)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(qtyText, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(81, 81, 81))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(timeLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(38, 38, 38)
                .addComponent(dateLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(invoiceButton, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(dataBaseButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(payButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cancelButton)
                .addContainerGap())
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel10)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(fullAmountText, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 654, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
            .addComponent(jSeparator1)
            .addComponent(jSeparator2)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel1)
                        .addGap(132, 132, 132)
                        .addComponent(jXImagePanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5)
                            .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel3)
                            .addComponent(jLabel6)
                            .addComponent(jLabel2))
                        .addGap(11, 11, 11)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(titleText, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(addressText)
                                .addComponent(buyerIdComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jDateChooser1, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(buyerNameComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 76, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(104, 104, 104)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addGroup(jPanel2Layout.createSequentialGroup()
                                    .addComponent(productButton)
                                    .addGap(18, 18, 18)
                                    .addComponent(addButton))
                                .addGroup(jPanel2Layout.createSequentialGroup()
                                    .addComponent(jLabel12)
                                    .addGap(18, 18, 18)
                                    .addComponent(containerText, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel8)
                                .addGap(22, 22, 22)
                                .addComponent(invoiceText, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(33, 33, 33))))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(jPanel2Layout.createSequentialGroup()
                            .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jXImagePanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                            .addComponent(buyerIdComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                            .addComponent(jLabel6)
                            .addComponent(titleText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                            .addComponent(jLabel3)
                            .addComponent(buyerNameComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(5, 5, 5)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                            .addComponent(jLabel4)
                            .addComponent(addressText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                            .addComponent(jLabel5)
                            .addComponent(jDateChooser1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(addButton)
                                .addComponent(productButton)))
                        .addGap(0, 20, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                            .addComponent(jLabel8)
                            .addComponent(invoiceText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                            .addComponent(jLabel12)
                            .addComponent(containerText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(71, 71, 71)))
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 2, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jLabel9)
                    .addComponent(qtyText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(productComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(fullAmountText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 2, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(dataBaseButton)
                    .addComponent(payButton)
                    .addComponent(cancelButton)
                    .addComponent(dateLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(timeLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(invoiceButton, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, 685, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void addButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addButtonActionPerformed
        BuyerForm bf = new BuyerForm(null, true);
        
        String s = new String(Utility.getNextPaymentId("buyerId", "Buyer", "RE-MB-B"));
        bf.idText.setText(s);
        
        bf.setVisible(true);
    }//GEN-LAST:event_addButtonActionPerformed

    private void buyerIdComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buyerIdComboBoxActionPerformed
        // TODO add your handling code here:

        String id = (String) (buyerIdComboBox.getSelectedItem());
        Buyer b = null;
        try {
            b = BuyerUtilities.searchBuyer(id);
        } catch (SQLException e) {
        }
        try {
            buyerNameComboBox.setSelectedItem(b.getBuyerName());
            addressText.setText(b.getAddress());
            titleText.setText(b.getBuyerTitle());
        } catch (NullPointerException n) {
            //JOptionPane.showMessageDialog(this, "No ID Selection....");
        }
    }//GEN-LAST:event_buyerIdComboBoxActionPerformed

    private void buyerIdComboBoxKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_buyerIdComboBoxKeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_buyerIdComboBoxKeyReleased

    private void buyerNameComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buyerNameComboBoxActionPerformed
        String name = (String) (buyerNameComboBox.getSelectedItem());
        Buyer b = null;
        try {
            b = BuyerUtilities.searchCustomerName(name);
        } catch (SQLException e) {
        }

        try {
            buyerIdComboBox.setSelectedItem(b.getBuyerId());
            addressText.setText(b.getAddress());
            titleText.setText(b.getBuyerTitle());
        } catch (NullPointerException n) {
        }
    }//GEN-LAST:event_buyerNameComboBoxActionPerformed

    private void buyerNameComboBoxKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_buyerNameComboBoxKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_buyerNameComboBoxKeyPressed

    private void productComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_productComboBoxActionPerformed

        String description = (String) (productComboBox.getSelectedItem());
        Product p = null;
        try {
            p = ProductUtilities.searchDescription(description);
        } catch (SQLException e) {
        }
        try {
            qtyOnHand = p.getProductQtyOnHand();
        } catch (NullPointerException nm) {
        }
    }//GEN-LAST:event_productComboBoxActionPerformed

    private void qtyTextKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_qtyTextKeyPressed

        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            try {
                int qOnHand = qtyOnHand;

                qty = Integer.parseInt(qtyText.getText());
                if (qOnHand < qty) {
                    JOptionPane.showMessageDialog(this, "Not Stock , Please produce this Product.....");
                }
                //else {
                String description = (String) (productComboBox.getSelectedItem());

                Product p = null;

                try {
                    p = ProductUtilities.searchDescription(description);

                    Object data[] = new Object[7];
                    //  data[0] = p.getProductCode();
                    data[0] = p.getGrade();
                    data[1] = description;
                    data[2] = qty;
                    data[3] = p.getUnitWeight();
                    data[4] = p.getUnitWeight() * qty;
                    data[5] = p.getProductUnitPrice();
                    data[6] = p.getProductUnitPrice() * p.getUnitWeight() * qty;
                    ((DefaultTableModel) jTable.getModel()).addRow(data);

                    qtyText.setText("");
                    int row_count = jTable.getRowCount();

                    double total = 0.0;

                    for (int k = 0; k < row_count; k++) {
                        Double amount_at_this_row = (Double) (jTable.getValueAt(k, 6));
                        total += amount_at_this_row;
                    }
                    fullAmountText.setText("" + total);

                    newQtyOnHand = qOnHand - qty;

                } catch (SQLException ex) {
                    //Logger.getLogger(AddOrderForm.class.getName()).log(Level.SEVERE, null, ex);
                }
            } catch (NumberFormatException nm) {
            }
        }
    }//GEN-LAST:event_qtyTextKeyPressed

    private void dataBaseButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dataBaseButtonActionPerformed

        //add Order

        String id = invoiceText.getText();
        String buyerId = (String) buyerIdComboBox.getSelectedItem();
        Date deliveryDate = jDateChooser1.getDate();
        java.util.Date date1 = null;
        boolean status = false;
        String orderDate = dateLabel.getText();
        DateFormat formatter;
        java.util.Date date = null;
        formatter = new SimpleDateFormat("yyyy-MM-dd");
        try {

            java.util.Date dt = formatter.parse(orderDate);
            date = new java.sql.Date(dt.getTime());

        } catch (ParseException ex) {
            //JOptionPane.showMessageDialog(OrderForm.this, "The Order Date already entered wrong.");
            //ex.printStackTrace();
        }

        try {
            date1 = new java.sql.Date(deliveryDate.getTime());
        } catch (NullPointerException nm) {
            JOptionPane.showMessageDialog(MakeOrder.this, "Please Input delivery date...");
        }
        Order order = new Order(id, buyerId, status, date, date1);


        try {
            if (OrderUtilities.addsearchOrder(id) == null) {
                if (ValidationOrder.isValidOrderId(id) && ValidationOrder.isValidBuyerId(buyerId) && ValidationOrder.isValidDate(dateLabel.getText())) {
                    Object[] options = {"Yes", "No", "Cancel"};
                    int res = JOptionPane.showOptionDialog(null, "Do you want to save the changes to Order?", "Add Order", JOptionPane.DEFAULT_OPTION, JOptionPane.WARNING_MESSAGE, null, options, options[0]);

                    if (res == JOptionPane.YES_OPTION) {
                        int rows = OrderUtilities.addOrder(order);

                        if (rows > 0) {
                            JOptionPane.showMessageDialog(MakeOrder.this, "Successfully Addedd.");
                            payButton.setEnabled(true);
                        }
                    }

                } else if (!ValidationOrder.isValidOrderId(id)) {
                    JOptionPane.showMessageDialog(MakeOrder.this, "Invalid Order ID..");
                } else if (!ValidationOrder.isValidBuyerId(buyerId)) {
                    JOptionPane.showMessageDialog(MakeOrder.this, "Invalid Buyer ID..");
                } else if (!ValidationOrder.isValidDate(orderDate)) {
                    JOptionPane.showMessageDialog(MakeOrder.this, "Invalid Order Date..");
                } else {
                    JOptionPane.showMessageDialog(MakeOrder.this, "Wrong Input....");
                }

            } else {

                JOptionPane.showMessageDialog(MakeOrder.this, "The Order Id you have entered is in the database.");
            }
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(MakeOrder.this, "Added Fail.");
//            ex.printStackTrace();
        }


        //add OrderDetail

        String description = (String) (productComboBox.getSelectedItem());
        Product p = null;
        String code = null;
        double price = 0;
        double discount = 0;
        String containerNo = containerText.getText();
        int qty1 = qty;
        try {
            p = ProductUtilities.searchDescription(description);
        } catch (SQLException e) {
        }

        try {
            code = p.getProductCode();
            price = p.getProductUnitPrice();
        } catch (NullPointerException n) {
        }

        OrderDetail orderDetail = new OrderDetail(id, code, qty1, discount, containerNo, price);

        try {
            if (OrderDetailUtilities.addsearchOrderDetail(id, code) == null) {

                if (ValidationOrderDetail.isValidOrderId(id) && ValidationOrderDetail.isValidProductCode(code) && ValidationOrderDetail.isValidContainerNo(containerNo)) {
                    Object[] options = {"Yes", "No", "Cancel"};
                    int res = JOptionPane.showOptionDialog(null, "Do you want to save the changes to Order Detail?", "Add Order Detail", JOptionPane.DEFAULT_OPTION, JOptionPane.WARNING_MESSAGE, null, options, options[0]);

                    if (res == JOptionPane.YES_OPTION) {

                        int rows = OrderDetailUtilities.addOrderDetail(orderDetail);
                        if (rows > 0) {
                            JOptionPane.showMessageDialog(MakeOrder.this, "Successfully Addedd.");
                        }
                    }
                } else if (!ValidationOrderDetail.isValidOrderId(id)) {
                    JOptionPane.showMessageDialog(MakeOrder.this, "The Order ID already entered wrong.");
                } else if (!ValidationOrderDetail.isValidProductCode(code)) {
                    JOptionPane.showMessageDialog(MakeOrder.this, "The Product Code already entered wrong.");

                } else if (!ValidationOrderDetail.isValidContainerNo(containerNo)) {
                    JOptionPane.showMessageDialog(MakeOrder.this, "The Container No already entered wrong.");
                } else {
                    JOptionPane.showMessageDialog(MakeOrder.this, "Wrong Input...");
                }

            } else {
                JOptionPane.showMessageDialog(MakeOrder.this, "The Order ID & Product Code you have entered is in the database.");
            }
        } catch (SQLException ex) {
            Logger.getLogger(OrderDetailForm.class.getName()).log(Level.SEVERE, null, ex);
        }


        //update Product

        Product product = new Product(code, newQtyOnHand);

        try {

            Object[] options = {"Yes", "No", "Cancel"};
            int res = JOptionPane.showOptionDialog(null, "Do you want to save the changes to Product?", "Update Product", JOptionPane.DEFAULT_OPTION, JOptionPane.WARNING_MESSAGE, null, options, options[0]);

            if (res == JOptionPane.YES_OPTION) {

                if (ProductUtilities.addsearchProduct(code) != null) {

                    int rows = ProductUtilities.updateOrderProduct(product);
                    if (rows > 0) {
                        JOptionPane.showMessageDialog(MakeOrder.this, "Update successfully");
                    }
                } else {
                    JOptionPane.showMessageDialog(MakeOrder.this, "The Product Code you have entered is not in the database.");
                }
            }

        } catch (SQLException e) {
            JOptionPane.showMessageDialog(MakeOrder.this, "Wrong SQL");
            //e.printStackTrace();
        }
    }//GEN-LAST:event_dataBaseButtonActionPerformed

    private void cancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelButtonActionPerformed
        
        int res = JOptionPane.showConfirmDialog(this, "Do you want to Exit ?");
        if (res == JOptionPane.YES_OPTION) {
            System.exit(0);
        }
    }//GEN-LAST:event_cancelButtonActionPerformed

    private void payButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_payButtonActionPerformed
        String id = fullAmountText.getText();
        CashForm cForm1 = new CashForm(null, true);
        
        String s = new String(Utility.getNextPaymentId("paymentId", "BuyerPayment", "RE-CP-"));
        cForm1.paymentIdText.setText(s);
        CashForm.fAmountText.setText(id);
        cForm1.orderIdText.setText(invoiceText.getText());
        cForm1.setVisible(true);
    }//GEN-LAST:event_payButtonActionPerformed

    private void invoiceButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_invoiceButtonActionPerformed

        InvoiceForm inf = new InvoiceForm(null, true);

        TableModel t = jTable.getModel();
        //if (t != null) {
        inf.dataTable.setModel(t);

        //set amount

        String amount = fullAmountText.getText();
        inf.amountText.setText(amount);

        //set To, From

        String name = titleText.getText() + " " + (String) buyerNameComboBox.getSelectedItem();
        inf.buyerText.setText(name);
        String country = addressText.getText();
        inf.countryText.setText(country);

        //set invoiceId & containerNo

        String invoice = invoiceText.getText();
        inf.invoiceText.setText(invoice);
        String containerNo = containerText.getText();
        inf.containerText.setText(containerNo);

        //set date

        String date = dateLabel.getText();
        inf.dateText.setText(date);

        String id = (String) (buyerIdComboBox.getSelectedItem());
        Buyer b = null;
        try {
            b = BuyerUtilities.searchBuyer(id);
        } catch (SQLException e) {
        }
        try {
            inf.faxText.setText(b.getFax());
            inf.telephoneText.setText(b.getTelephone());
        } catch (NullPointerException n) {
            //JOptionPane.showMessageDialog(this, "No ID Selection....");
        }

        inf.setVisible(true);
    }//GEN-LAST:event_invoiceButtonActionPerformed

    private void productButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_productButtonActionPerformed

        ProductForm pf = new ProductForm(null, true);      
        pf.codeText.setText(Utility.getNextProductCode("productCode", "Product", "PSC"));
        
        pf.setVisible(true);
    }//GEN-LAST:event_productButtonActionPerformed

    private void qtyTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_qtyTextActionPerformed
        String getQty = qtyText.getText();
        String st = getQty.substring(0, getQty.length());
        char[] digit = st.toCharArray();
        for (char ch : digit) {
            if (Character.isDigit(ch)) {
                qtyText.setText(getQty);
            } else {
                qtyText.setText("");
            }
        }
    }//GEN-LAST:event_qtyTextActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        MakeOrder.this.setVisible(false);
        
        if (mm == null) {
            mm = new MainMenu();
            mm.setVisible(true);
        } else {
            mm.setVisible(true);
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        int res = JOptionPane.showConfirmDialog(this, "Do you want to Exit ?");
        if (res == JOptionPane.YES_OPTION) {
            System.exit(0);
        }
    }//GEN-LAST:event_formWindowClosing

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /*
         * Set the Nimbus look and feel
         */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /*
         * If Nimbus (introduced in Java SE 6) is not available, stay with the
         * default look and feel. For details see
         * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MakeOrder.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MakeOrder.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MakeOrder.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MakeOrder.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /*
         * Create and display the dialog
         */
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                try {
                    try {
                        UIManager.setLookAndFeel(new SyntheticaBlueMoonLookAndFeel());
                    } catch (ParseException ex) {
                        Logger.getLogger(MakeOrder.class.getName()).log(Level.SEVERE, null, ex);
                    }
                } catch (UnsupportedLookAndFeelException ex) {
                    Logger.getLogger(MakeOrder.class.getName()).log(Level.SEVERE, null, ex);
                }
                MakeOrder dialog = new MakeOrder(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {

                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addButton;
    private javax.swing.JTextField addressText;
    private javax.swing.JComboBox buyerIdComboBox;
    private javax.swing.JComboBox buyerNameComboBox;
    private javax.swing.JButton cancelButton;
    private javax.swing.JTextField containerText;
    private javax.swing.JButton dataBaseButton;
    private javax.swing.JLabel dateLabel;
    private javax.swing.JTextField fullAmountText;
    private javax.swing.JButton invoiceButton;
    private javax.swing.JTextField invoiceText;
    private javax.swing.JButton jButton1;
    private com.toedter.calendar.JDateChooser jDateChooser1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JTable jTable;
    private org.jdesktop.swingx.JXImagePanel jXImagePanel1;
    private javax.swing.JButton payButton;
    private javax.swing.JButton productButton;
    private javax.swing.JComboBox productComboBox;
    private javax.swing.JTextField qtyText;
    private javax.swing.JLabel timeLabel;
    private javax.swing.JTextField titleText;
    // End of variables declaration//GEN-END:variables
}
