/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package buyer;

import de.javasoft.plaf.synthetica.SyntheticaBlueMoonLookAndFeel;
import java.sql.SQLException;
import java.text.ParseException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.*;
import javax.swing.table.DefaultTableModel;
import randimaexporters.MainMenu;
import validation.Validator;

/**
 *
 * @author PC
 */
public class BuyerForm extends javax.swing.JDialog {
    
    Validator validator;
    private MainMenu mm = null;

    /**
     * Creates new form BuyerForm1
     */
    public BuyerForm(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        idText.setText(AutoGenerateId.getNextId("buyerId", "Buyer", "RE-MB-B"));
        
        BuyerUtilities.viewBuyer(jTable1, "select * from Buyer");

        ImageIcon icon = new ImageIcon(getClass().getResource("/buyer/Untitled-4.jpg"));

        jXImagePanel1.setImage(icon.getImage());

        validator = new Validator();
        validator.setBounds(0, 0, getWidth(), getHeight());
        JLayeredPane pane = getRootPane().getLayeredPane();
        pane.add(validator, JLayeredPane.DEFAULT_LAYER + 500);

        setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();
        addButton = new javax.swing.JButton();
        editButton = new javax.swing.JButton();
        deleteButton = new javax.swing.JButton();
        clearButton = new javax.swing.JButton();
        refreshButton = new javax.swing.JButton();
        searchText = new javax.swing.JTextField();
        searchButton = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        idText = new javax.swing.JTextField();
        titleText = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        buyerNameText = new javax.swing.JTextField();
        companyNameText = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        addressText = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        cityText = new javax.swing.JTextField();
        countryText = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        eMailText = new javax.swing.JTextField();
        websiteText = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        telephoneText = new javax.swing.JTextField();
        faxText = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        postalCodeText = new javax.swing.JTextField();
        jPanel4 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jXImagePanel1 = new org.jdesktop.swingx.JXImagePanel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(228, 247, 228));
        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Buyer"));

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Search"));

        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder("Commands"));

        addButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/buyer/5.jpg"))); // NOI18N
        addButton.setText("    Add ");
        addButton.setDisabledIcon(new javax.swing.ImageIcon(getClass().getResource("/buyer/9.jpg"))); // NOI18N
        addButton.setEnabled(false);
        addButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addButtonActionPerformed(evt);
            }
        });

        editButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/buyer/4.jpg"))); // NOI18N
        editButton.setText("   Edit");
        editButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editButtonActionPerformed(evt);
            }
        });

        deleteButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/buyer/6.jpg"))); // NOI18N
        deleteButton.setText("   Delete ");
        deleteButton.setDisabledIcon(new javax.swing.ImageIcon(getClass().getResource("/buyer/9.jpg"))); // NOI18N
        deleteButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteButtonActionPerformed(evt);
            }
        });

        clearButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/buyer/1.jpg"))); // NOI18N
        clearButton.setText("   Clear ");
        clearButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearButtonActionPerformed(evt);
            }
        });

        refreshButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/buyer/2.jpg"))); // NOI18N
        refreshButton.setText("   Refresh");
        refreshButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                refreshButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(addButton, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(deleteButton, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(editButton, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(clearButton, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(refreshButton, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel5Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {addButton, clearButton, deleteButton, editButton});

        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addComponent(addButton)
                .addGap(7, 7, 7)
                .addComponent(editButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(deleteButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(clearButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(refreshButton)
                .addContainerGap(80, Short.MAX_VALUE))
        );

        jPanel5Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {addButton, clearButton, deleteButton, editButton});

        searchText.setText("Search...");
        searchText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchTextActionPerformed(evt);
            }
        });

        searchButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/buyer/3.jpg"))); // NOI18N
        searchButton.setBorderPainted(false);
        searchButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addComponent(searchText, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(searchButton, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(4, 4, 4))
                    .addComponent(jPanel5, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(searchText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(searchButton, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(67, 67, 67))
        );

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder("Buyer Information"));

        jLabel1.setText("Buyer ID");

        idText.setText("RE-MB-B");
        idText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                idTextActionPerformed(evt);
            }
        });

        titleText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                titleTextActionPerformed(evt);
            }
        });

        jLabel3.setText("Buyer Title");

        jLabel10.setText("Buyer Name");

        buyerNameText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buyerNameTextActionPerformed(evt);
            }
        });

        companyNameText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                companyNameTextActionPerformed(evt);
            }
        });

        jLabel11.setText("Company Name");

        jLabel12.setText("Company Address");

        addressText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addressTextActionPerformed(evt);
            }
        });

        jLabel2.setText("City");

        cityText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cityTextActionPerformed(evt);
            }
        });

        countryText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                countryTextActionPerformed(evt);
            }
        });

        jLabel4.setText("Country");

        jLabel6.setText("E-mail");

        eMailText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                eMailTextActionPerformed(evt);
            }
        });

        websiteText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                websiteTextActionPerformed(evt);
            }
        });

        jLabel7.setText("Web Site");

        jLabel8.setText("Telephone");

        telephoneText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                telephoneTextActionPerformed(evt);
            }
        });

        faxText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                faxTextActionPerformed(evt);
            }
        });

        jLabel9.setText("Fax");

        jLabel15.setText("Postal code");

        postalCodeText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                postalCodeTextActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel12)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(websiteText, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(companyNameText)
                        .addComponent(buyerNameText, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(cityText, javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(countryText, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(postalCodeText, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(telephoneText, javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(faxText, javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(titleText, javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(idText, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 154, Short.MAX_VALUE))
                    .addComponent(eMailText, javax.swing.GroupLayout.PREFERRED_SIZE, 179, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(addressText, javax.swing.GroupLayout.PREFERRED_SIZE, 205, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGap(130, 130, 130)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(cityText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(idText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(6, 6, 6)
                                .addComponent(titleText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(6, 6, 6)
                                .addComponent(buyerNameText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(6, 6, 6)
                                .addComponent(companyNameText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(addressText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(4, 4, 4)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(countryText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(eMailText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(websiteText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(telephoneText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(faxText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(postalCodeText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(7, 7, 7)
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(7, 7, 7)
                        .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(7, 7, 7)
                        .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(71, Short.MAX_VALUE))
        );

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder("Preview"));

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Name", "City", "Country", "E-Mail", "Telephone", "Postal Code", "Com. Address", "Web Site", "Title", "Fax", "Com. Name"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Object.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Object.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(jTable1);

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 464, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 193, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(51, Short.MAX_VALUE))
        );

        jLabel13.setFont(new java.awt.Font("Agency FB", 1, 14)); // NOI18N
        jLabel13.setText("Search");

        jLabel14.setFont(new java.awt.Font("Agency FB", 1, 14)); // NOI18N
        jLabel14.setText("Buyer Information");

        javax.swing.GroupLayout jXImagePanel1Layout = new javax.swing.GroupLayout(jXImagePanel1);
        jXImagePanel1.setLayout(jXImagePanel1Layout);
        jXImagePanel1Layout.setHorizontalGroup(
            jXImagePanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 198, Short.MAX_VALUE)
        );
        jXImagePanel1Layout.setVerticalGroup(
            jXImagePanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 39, Short.MAX_VALUE)
        );

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/buyer/7.jpg"))); // NOI18N
        jButton1.setBorderPainted(false);
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/buyer/8.jpg"))); // NOI18N
        jButton2.setBorderPainted(false);

        jLabel5.setFont(new java.awt.Font("Gungsuh", 3, 24)); // NOI18N
        jLabel5.setText("Buyer");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel5)
                .addGap(293, 293, 293)
                .addComponent(jXImagePanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(33, 33, 33))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, 318, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(101, 101, 101)
                        .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18))
            .addComponent(jSeparator1)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jXImagePanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(8, 8, 8)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)))
                    .addComponent(jLabel5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 21, Short.MAX_VALUE)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(22, 22, 22)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, 0, Short.MAX_VALUE))
                    .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 998, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void searchTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchTextActionPerformed

        if (searchText.getText().isEmpty()) {
            searchText.setText("Search...");
        }
        String search = searchText.getText();

        try {

            Buyer buyer = BuyerUtilities.searchBuyer(search);
            if (buyer != null) {
                idText.setText(search);
                titleText.setText(buyer.getBuyerTitle());
                buyerNameText.setText(buyer.getBuyerName());
                companyNameText.setText(buyer.getCompanyName());
                addressText.setText(buyer.getAddress());
                cityText.setText(buyer.getCity());
                countryText.setText(buyer.getCountry());
                eMailText.setText(buyer.getEMailAddress());
                websiteText.setText(buyer.getWebSite());
                telephoneText.setText(buyer.getTelephone());
                faxText.setText(buyer.getFax());
                postalCodeText.setText(buyer.getPostalCode());
            } else {
                JOptionPane.showMessageDialog(BuyerForm.this, "No Such Buyer :" + search);
            }
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(BuyerForm.this, "Wrong sql");
        }
    }//GEN-LAST:event_searchTextActionPerformed

    private void searchButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchButtonActionPerformed
        String search = searchText.getText();

        try {

            Buyer buyer = BuyerUtilities.searchBuyer(search);
            if (buyer != null) {
                idText.setText(search);
                titleText.setText(buyer.getBuyerTitle());
                buyerNameText.setText(buyer.getBuyerName());
                companyNameText.setText(buyer.getCompanyName());
                addressText.setText(buyer.getAddress());
                cityText.setText(buyer.getCity());
                countryText.setText(buyer.getCountry());
                eMailText.setText(buyer.getEMailAddress());
                websiteText.setText(buyer.getWebSite());
                telephoneText.setText(buyer.getTelephone());
                faxText.setText(buyer.getFax());
                postalCodeText.setText(buyer.getPostalCode());
            } else {
                JOptionPane.showMessageDialog(BuyerForm.this, "No Such Buyer :" + search);
            }
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(BuyerForm.this, "Wrong sql");
        }
    }//GEN-LAST:event_searchButtonActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        BuyerForm.this.setVisible(false);
        //BuyerForm.this.dispose();
        if (mm == null) {
            mm = new MainMenu();
            mm.setVisible(true);
        } else {
            mm.setVisible(true);
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void idTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_idTextActionPerformed

        if (idText.getText().isEmpty()) {
            idText.setText("RE-MB-B");
        }

        String id = idText.getText();

        if (id.isEmpty()) {
            validator.addWarning(idText);
            //System.out.println("Empty......");
            return;
        } else {
            validator.removeWarning(idText);
        }
        try {

            if (!ValidationBuyer.isValidBuyerId(id)) {
                validator.addWarning(idText);

                idText.setText("");

            } else {
                try {
                    if (BuyerUtilities.addsearchBuyer(id) == null) {
                        addButton.setEnabled(true);
                    }
                } catch (SQLException ex) {
                    JOptionPane.showMessageDialog(BuyerForm.this, "The Buyer ID you have entered is in the Database...");
                }
                titleText.requestFocus();
                validator.removeWarning(idText);
            }

        } catch (StringIndexOutOfBoundsException ex) {
            JOptionPane.showMessageDialog(this, "Please Enter the correct Buyer ID...");
            idText.setText("");
            //ex.printStackTrace();
        }
    }//GEN-LAST:event_idTextActionPerformed

    private void titleTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_titleTextActionPerformed
        String title = titleText.getText();

        if (!ValidationBuyer.isValidBuyerTitle(title)) {
            validator.addWarning(titleText);
            titleText.setText("");
        } else {
            buyerNameText.requestFocus();
            validator.removeWarning(titleText);
        }
    }//GEN-LAST:event_titleTextActionPerformed

    private void buyerNameTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buyerNameTextActionPerformed
        String name = buyerNameText.getText();

        if (!ValidationBuyer.isValidBuyerName(name)) {
            validator.addWarning(buyerNameText);
            buyerNameText.setText("");
        } else {
            companyNameText.requestFocus();
            validator.removeWarning(buyerNameText);
        }

    }//GEN-LAST:event_buyerNameTextActionPerformed

    private void companyNameTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_companyNameTextActionPerformed
        String companyName = companyNameText.getText();

        if (!ValidationBuyer.isAValidCompanyName(companyName)) {
            validator.addWarning(companyNameText);
            companyNameText.setText("");
        } else {
            addressText.requestFocus();
            validator.removeWarning(companyNameText);
        }

    }//GEN-LAST:event_companyNameTextActionPerformed

    private void addressTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addressTextActionPerformed

        String companyAddress = addressText.getText();

        if (!ValidationBuyer.isValidAddress(companyAddress)) {
            validator.addWarning(addressText);
            addressText.setText("");
        } else {
            cityText.requestFocus();
            validator.removeWarning(addressText);
        }
    }//GEN-LAST:event_addressTextActionPerformed

    private void cityTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cityTextActionPerformed
        String city = cityText.getText();

        if (!ValidationBuyer.isValidCity(city)) {
            validator.addWarning(cityText);
            cityText.setText("");
        } else {
            countryText.requestFocus();
            validator.removeWarning(cityText);
        }
    }//GEN-LAST:event_cityTextActionPerformed

    private void countryTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_countryTextActionPerformed
        String country = countryText.getText();

        if (!ValidationBuyer.isValidCity(country)) {
            validator.addWarning(countryText);
            countryText.setText("");
        } else {
            eMailText.requestFocus();
            validator.removeWarning(countryText);
        }

    }//GEN-LAST:event_countryTextActionPerformed

    private void eMailTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_eMailTextActionPerformed

        if (!ValidationBuyer.isAValidMail(eMailText.getText())) {
            validator.addWarning(eMailText);
            eMailText.setText("");
        } else {
            websiteText.requestFocus();
            validator.removeWarning(eMailText);
        }
    }//GEN-LAST:event_eMailTextActionPerformed

    private void websiteTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_websiteTextActionPerformed
        String website = websiteText.getText();

        if (!ValidationBuyer.isAValidWebsite(website)) {
            validator.addWarning(websiteText);
            JOptionPane.showMessageDialog(this, "Wrong Input....");
            websiteText.setText("");
        } else {
            telephoneText.requestFocus();
            validator.removeWarning(websiteText);
        }
    }//GEN-LAST:event_websiteTextActionPerformed

    private void telephoneTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_telephoneTextActionPerformed
        String telephone = telephoneText.getText();

        if (!ValidationBuyer.isValidFaxTelephone(telephone)) {
            validator.addWarning(telephoneText);
            JOptionPane.showMessageDialog(this, "Wrong Input....");
            telephoneText.setText("");
        } else {
            faxText.requestFocus();
            validator.removeWarning(telephoneText);
        }

    }//GEN-LAST:event_telephoneTextActionPerformed

    private void faxTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_faxTextActionPerformed
        String fax = faxText.getText();

        if (!ValidationBuyer.isValidFaxTelephone(fax)) {
            validator.addWarning(faxText);
            JOptionPane.showMessageDialog(this, "Wrong Input....");
            faxText.setText("");
        } else {
            postalCodeText.requestFocus();
            validator.removeWarning(faxText);
        }

    }//GEN-LAST:event_faxTextActionPerformed

    private void postalCodeTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_postalCodeTextActionPerformed
        String postalCode = postalCodeText.getText();

        if (!ValidationBuyer.isValidPostalCode(postalCode)) {
            validator.addWarning(postalCodeText);
            JOptionPane.showMessageDialog(this, "Wrong Input....");
            postalCodeText.setText("");
        } else {
            validator.removeWarning(postalCodeText);
        }
    }//GEN-LAST:event_postalCodeTextActionPerformed

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked

        int selectedRow = jTable1.getSelectedRow();
        if (selectedRow == -1) {
            JOptionPane.showMessageDialog(BuyerForm.this, "non selected row");
        }
        if (selectedRow != -1) {

            String id = (String) jTable1.getValueAt(selectedRow, 0);
            // JOptionPane.showMessageDialog(Form.this, "selected value :" + id);

            try {

                Buyer buyer = BuyerUtilities.searchBuyer(id);

                if (buyer != null) {
                    idText.setText(buyer.getBuyerId());
                    titleText.setText(buyer.getBuyerTitle());
                    buyerNameText.setText(buyer.getBuyerName());
                    companyNameText.setText(buyer.getCompanyName());
                    addressText.setText(buyer.getAddress());
                    cityText.setText(buyer.getCity());
                    countryText.setText(buyer.getCountry());
                    eMailText.setText(buyer.getEMailAddress());
                    websiteText.setText(buyer.getWebSite());
                    telephoneText.setText(buyer.getTelephone());
                    faxText.setText(buyer.getFax());
                    postalCodeText.setText(buyer.getPostalCode());
                } else {
                    JOptionPane.showMessageDialog(BuyerForm.this, "No Such Buyer :" + id);
                }
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(BuyerForm.this, "Wrong sql");
            }
        }

        validator.removeWarning(idText);
        validator.removeWarning(buyerNameText);
        validator.removeWarning(titleText);
        validator.removeWarning(companyNameText);
        validator.removeWarning(addressText);
        validator.removeWarning(cityText);
        validator.removeWarning(countryText);
        validator.removeWarning(postalCodeText);
        validator.removeWarning(telephoneText);
        validator.removeWarning(faxText);
        validator.removeWarning(websiteText);
        validator.removeWarning(eMailText);
    }//GEN-LAST:event_jTable1MouseClicked

    private void addButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addButtonActionPerformed

        String id = idText.getText();
        String name = buyerNameText.getText();
        String cName = companyNameText.getText();
        String address = addressText.getText();
        String title = titleText.getText();
        String city = cityText.getText();
        String country = countryText.getText();
        String email = eMailText.getText();
        String website = websiteText.getText();
        String fax = faxText.getText();
        String telephone = telephoneText.getText();
        String postalCode = postalCodeText.getText();

        if (!id.isEmpty() && (!name.isEmpty()) && id.length() > 10 && id.length() <= 12) {

            validator.removeWarning(idText);

            Buyer buyer = new Buyer(id, title, name, cName, address, city, country, email, website, telephone, fax, postalCode);

            try {
                if (BuyerUtilities.addsearchBuyer(id) == null) {

                    if (ValidationBuyer.isValidBuyerId(id) && ValidationBuyer.isValidBuyerName(name) && ValidationBuyer.isValidBuyerTitle(title) && ValidationBuyer.isValidCity(city) && ValidationBuyer.isValidCity(country) && ValidationBuyer.isValidAddress(address) && ValidationBuyer.isAValidCompanyName(cName) && ValidationBuyer.isValidFaxTelephone(fax) && ValidationBuyer.isValidFaxTelephone(telephone) && ValidationBuyer.isAValidMail(email) && ValidationBuyer.isAValidWebsite(website)) {

                        int rows = BuyerUtilities.addBuyer(buyer);
                        if (rows > 0) {
                            validator.removeWarning(idText);
                            JOptionPane.showMessageDialog(BuyerForm.this, "Successfully Addedd.");
                        }
                    } else if (!ValidationBuyer.isValidBuyerId(id)) {
                        validator.addWarning(idText);
                        JOptionPane.showMessageDialog(BuyerForm.this, "The Buyer ID already entered wrong.");
                    } else if (!ValidationBuyer.isValidBuyerTitle(title)) {
                        validator.addWarning(titleText);
                        JOptionPane.showMessageDialog(BuyerForm.this, "The Buyer Title already entered wrong.");
                    } else if (!ValidationBuyer.isValidBuyerName(name)) {
                        validator.addWarning(buyerNameText);
                        JOptionPane.showMessageDialog(BuyerForm.this, "The Buyer Name already entered wrong.");
                    } else if (!ValidationBuyer.isValidAddress(address)) {
                        validator.addWarning(addressText);
                        JOptionPane.showMessageDialog(BuyerForm.this, "The Company Address already entered wrong.");
                    } else if (!ValidationBuyer.isAValidCompanyName(cName)) {
                        validator.addWarning(companyNameText);
                        JOptionPane.showMessageDialog(BuyerForm.this, "The Company Name already entered wrong.");
                    } else if (!ValidationBuyer.isValidCity(city)) {
                        validator.addWarning(cityText);
                        JOptionPane.showMessageDialog(BuyerForm.this, "The City already entered wrong.");
                    } else if (!ValidationBuyer.isValidCity(country)) {
                        validator.addWarning(countryText);
                        JOptionPane.showMessageDialog(BuyerForm.this, "The Country already entered wrong.");
                    } else if (!ValidationBuyer.isAValidMail(email)) {
                        validator.addWarning(eMailText);
                        JOptionPane.showMessageDialog(BuyerForm.this, "The E-Mail already entered wrong.");
                    } else if (!ValidationBuyer.isAValidWebsite(website)) {
                        validator.addWarning(websiteText);
                        JOptionPane.showMessageDialog(BuyerForm.this, "The Web Site already entered wrong.");
                    } else if (!ValidationBuyer.isValidFaxTelephone(fax)) {
                        validator.addWarning(faxText);
                        JOptionPane.showMessageDialog(BuyerForm.this, "The Fax already entered wrong.");
                    } else if (!ValidationBuyer.isValidFaxTelephone(telephone)) {
                        validator.addWarning(telephoneText);
                        JOptionPane.showMessageDialog(BuyerForm.this, "The Telephone already entered wrong.");
                    } else if (!ValidationBuyer.isValidPostalCode(postalCode)) {
                        validator.addWarning(postalCodeText);
                        JOptionPane.showMessageDialog(BuyerForm.this, "The Postal code already entered wrong.");
                    } else {
                        JOptionPane.showMessageDialog(this, "Wrong Input...");
                    }
                } else {
                    validator.addWarning(idText);
                    JOptionPane.showMessageDialog(BuyerForm.this, "The Buyer ID you have entered is in the Database...");
                }
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(BuyerForm.this, "The Buyer ID you have entered is in the Database...");
            }
        } else if (id.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Please Enter the Correct Buyer ID...");
        } else if (name.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Please Enter the Correct Buyer Name...");
        } else {
            validator.addWarning(idText);
            JOptionPane.showMessageDialog(this, "Please Enter the Correct Buyer ID and Buyer Name...");
        }

    }//GEN-LAST:event_addButtonActionPerformed

    private void editButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editButtonActionPerformed
        String id = idText.getText();
        String name = buyerNameText.getText();
        String cName = companyNameText.getText();
        String address = addressText.getText();
        String title = titleText.getText();
        String city = cityText.getText();
        String country = countryText.getText();
        String email = eMailText.getText();
        String website = websiteText.getText();
        String fax = faxText.getText();
        String telephone = telephoneText.getText();
        String postalCode = postalCodeText.getText();

        Buyer buyer = new Buyer(id, title, name, cName, address, city, country, email, website, telephone, fax, postalCode);

        try {

            Object[] options = {"Yes", "No", "Cancel"};
            int res = JOptionPane.showOptionDialog(null, "Do you want to save the changes to Buyer?", "Update Buyer", JOptionPane.DEFAULT_OPTION, JOptionPane.WARNING_MESSAGE, null, options, options[0]);

            if (res == JOptionPane.YES_OPTION) {
                if (BuyerUtilities.addsearchBuyer(id) != null) {

                    if (ValidationBuyer.isValidBuyerId(id) && ValidationBuyer.isValidBuyerName(name) && ValidationBuyer.isValidBuyerTitle(title) && ValidationBuyer.isValidCity(city) && ValidationBuyer.isValidCity(country) && ValidationBuyer.isValidAddress(address) && ValidationBuyer.isAValidCompanyName(cName) && ValidationBuyer.isValidFaxTelephone(fax) && ValidationBuyer.isValidFaxTelephone(telephone) && ValidationBuyer.isAValidMail(email) && ValidationBuyer.isAValidWebsite(website)) {

                        int rows = BuyerUtilities.updateBuyer(buyer);
                        if (rows > 0) {
                            JOptionPane.showMessageDialog(BuyerForm.this, "Update successfully");
                        } else {
                            JOptionPane.showMessageDialog(BuyerForm.this, "No such Buyer : " + id);
                        }
                    } else if (!ValidationBuyer.isValidBuyerId(id)) {
                        validator.addWarning(idText);
                        JOptionPane.showMessageDialog(BuyerForm.this, "The Buyer ID already entered wrong.");
                    } else if (!ValidationBuyer.isValidBuyerTitle(title)) {
                        validator.addWarning(titleText);
                        JOptionPane.showMessageDialog(BuyerForm.this, "The Buyer Title already entered wrong.");
                    } else if (!ValidationBuyer.isValidBuyerName(name)) {
                        validator.addWarning(buyerNameText);
                        JOptionPane.showMessageDialog(BuyerForm.this, "The Buyer Name already entered wrong.");
                    } else if (!ValidationBuyer.isValidAddress(address)) {
                        validator.addWarning(addressText);
                        JOptionPane.showMessageDialog(BuyerForm.this, "The Company Address already entered wrong.");
                    } else if (!ValidationBuyer.isAValidCompanyName(cName)) {
                        validator.addWarning(companyNameText);
                        JOptionPane.showMessageDialog(BuyerForm.this, "The Company Name already entered wrong.");
                    } else if (!ValidationBuyer.isValidCity(city)) {
                        validator.addWarning(cityText);
                        JOptionPane.showMessageDialog(BuyerForm.this, "The City already entered wrong.");
                    } else if (!ValidationBuyer.isValidCity(country)) {
                        validator.addWarning(countryText);
                        JOptionPane.showMessageDialog(BuyerForm.this, "The Country already entered wrong.");
                    } else if (!ValidationBuyer.isAValidMail(email)) {
                        validator.addWarning(eMailText);
                        JOptionPane.showMessageDialog(BuyerForm.this, "The E-Mail already entered wrong.");
                    } else if (!ValidationBuyer.isAValidWebsite(website)) {
                        validator.addWarning(websiteText);
                        JOptionPane.showMessageDialog(BuyerForm.this, "The Web Site already entered wrong.");
                    } else if (!ValidationBuyer.isValidFaxTelephone(fax)) {
                        validator.addWarning(faxText);
                        JOptionPane.showMessageDialog(BuyerForm.this, "The Fax already entered wrong.");
                    } else if (!ValidationBuyer.isValidFaxTelephone(telephone)) {
                        validator.addWarning(telephoneText);
                        JOptionPane.showMessageDialog(BuyerForm.this, "The Telephone already entered wrong.");
                    } else if (!ValidationBuyer.isValidPostalCode(postalCode)) {
                        validator.addWarning(postalCodeText);
                        JOptionPane.showMessageDialog(BuyerForm.this, "The Postal code already entered wrong.");
                    } else {
                        JOptionPane.showMessageDialog(this, "Wrong Input...");
                    }
                } else {
                    validator.addWarning(idText);
                    JOptionPane.showMessageDialog(BuyerForm.this, "The Buyer ID you have entered is not in the Database...");
                }
            }

        } catch (SQLException e) {
            JOptionPane.showMessageDialog(BuyerForm.this, "Wrong SQL");
            //e.printStackTrace();
        }

    }//GEN-LAST:event_editButtonActionPerformed

    private void deleteButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteButtonActionPerformed

        String id = idText.getText();
        Buyer buyer = new Buyer(id);

        try {

            Object[] options = {"Yes", "No", "Cancel"};
            int option = JOptionPane.showOptionDialog(null, "Are you sure you want to permanently delete this Buyer?", "Delete Buyer", JOptionPane.DEFAULT_OPTION, JOptionPane.WARNING_MESSAGE, null, options, options[0]);

            if (option == JOptionPane.YES_OPTION) {

                int rows = BuyerUtilities.deleteBuyer(buyer);
                if (rows > 0) {
                    JOptionPane.showMessageDialog(BuyerForm.this, "Deleted successfully");
                } else {
                    JOptionPane.showMessageDialog(BuyerForm.this, "No such Buyer : " + id);
                }
            }

        } catch (SQLException e) {
            JOptionPane.showMessageDialog(BuyerForm.this, "Wrong SQL");
            //e.printStackTrace();
        }
    }//GEN-LAST:event_deleteButtonActionPerformed

    private void clearButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearButtonActionPerformed

        validator.removeWarning(idText);
        validator.removeWarning(buyerNameText);
        validator.removeWarning(titleText);
        validator.removeWarning(companyNameText);
        validator.removeWarning(addressText);
        validator.removeWarning(cityText);
        validator.removeWarning(countryText);
        validator.removeWarning(postalCodeText);
        validator.removeWarning(telephoneText);
        validator.removeWarning(faxText);
        validator.removeWarning(websiteText);
        validator.removeWarning(eMailText);

        //idText.setText("RE-MB-B");
        idText.setText(AutoGenerateId.getNextId("buyerId", "Buyer", "RE-MB-B"));
        titleText.setText("");
        buyerNameText.setText("");
        companyNameText.setText("");
        addressText.setText("");
        cityText.setText("");
        countryText.setText("");
        eMailText.setText("");
        websiteText.setText("");
        telephoneText.setText("");
        faxText.setText("");
        postalCodeText.setText("");
    }//GEN-LAST:event_clearButtonActionPerformed

    private void refreshButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refreshButtonActionPerformed

        validator.removeWarning(idText);
        validator.removeWarning(buyerNameText);
        validator.removeWarning(titleText);
        validator.removeWarning(companyNameText);
        validator.removeWarning(addressText);
        validator.removeWarning(cityText);
        validator.removeWarning(countryText);
        validator.removeWarning(postalCodeText);
        validator.removeWarning(telephoneText);
        validator.removeWarning(faxText);
        validator.removeWarning(websiteText);
        validator.removeWarning(eMailText);
        
        if (!searchText.getText().isEmpty()) {
            searchText.setText("Search...");
        }

        jTable1.clearSelection();
        int row_count = jTable1.getRowCount();

        for (int i = 0; i < row_count; i++) {

            ((DefaultTableModel) jTable1.getModel()).removeRow(0);

        }
        BuyerUtilities.viewBuyer(jTable1, "select * from Buyer");

//        if (evt.getSource() == addButton) {
//        }
    }//GEN-LAST:event_refreshButtonActionPerformed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        int res = JOptionPane.showConfirmDialog(this, "Do you want to Exit ?");
        if (res == JOptionPane.YES_OPTION) {
            System.exit(0);
        }
    }//GEN-LAST:event_formWindowClosing

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /*
         * Set the Nimbus look and feel
         */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /*
         * If Nimbus (introduced in Java SE 6) is not available, stay with the
         * default look and feel. For details see
         * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(BuyerForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(BuyerForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(BuyerForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(BuyerForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /*
         * Create and display the dialog
         */
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                try {
                    try {
                        UIManager.setLookAndFeel(new SyntheticaBlueMoonLookAndFeel());
                    } catch (ParseException ex) {
                        Logger.getLogger(BuyerForm.class.getName()).log(Level.SEVERE, null, ex);
                    }
                } catch (UnsupportedLookAndFeelException ex) {
                    Logger.getLogger(BuyerForm.class.getName()).log(Level.SEVERE, null, ex);
                }
                BuyerForm dialog = new BuyerForm(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {

                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addButton;
    private javax.swing.JTextField addressText;
    private javax.swing.JTextField buyerNameText;
    private javax.swing.JTextField cityText;
    private javax.swing.JButton clearButton;
    private javax.swing.JTextField companyNameText;
    private javax.swing.JTextField countryText;
    private javax.swing.JButton deleteButton;
    private javax.swing.JTextField eMailText;
    private javax.swing.JButton editButton;
    private javax.swing.JTextField faxText;
    public javax.swing.JTextField idText;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTable jTable1;
    private org.jdesktop.swingx.JXImagePanel jXImagePanel1;
    private javax.swing.JTextField postalCodeText;
    private javax.swing.JButton refreshButton;
    private javax.swing.JButton searchButton;
    private javax.swing.JTextField searchText;
    private javax.swing.JTextField telephoneText;
    private javax.swing.JTextField titleText;
    private javax.swing.JTextField websiteText;
    // End of variables declaration//GEN-END:variables
}
