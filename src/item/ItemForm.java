/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package item;

import de.javasoft.plaf.synthetica.SyntheticaBlueMoonLookAndFeel;
import java.sql.SQLException;
import java.text.ParseException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.*;
import javax.swing.table.DefaultTableModel;
import randimaexporters.MainMenu;
import validation.Validator;

/**
 *
 * @author PC
 */
public class ItemForm extends javax.swing.JDialog {

    Validator validator;
    
    private MainMenu mm = null;

    /**
     * Creates new form ItemForm
     */
    public ItemForm(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        ItemUtilities.viewItem(jTable1, "select * from Item");

        ImageIcon icon = new ImageIcon(getClass().getResource("/buyer/Untitled-4.jpg"));
        jXImagePanel1.setImage(icon.getImage());

        validator = new Validator();
        validator.setBounds(0, 0, getWidth(), getHeight());
        JLayeredPane pane = getRootPane().getLayeredPane();
        pane.add(validator, JLayeredPane.DEFAULT_LAYER + 500);
        
        setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();
        addButton = new javax.swing.JButton();
        editButton = new javax.swing.JButton();
        deleteButton = new javax.swing.JButton();
        clearButton = new javax.swing.JButton();
        refreshButton = new javax.swing.JButton();
        searchText = new javax.swing.JTextField();
        searchButton = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        codeText = new javax.swing.JTextField();
        priceText = new javax.swing.JTextField();
        descriptionText = new javax.swing.JTextField();
        qtyText = new javax.swing.JTextField();
        reorderText = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jXImagePanel1 = new org.jdesktop.swingx.JXImagePanel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(228, 247, 228));
        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Item"));

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Search"));

        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder("Commands"));

        addButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/buyer/5.jpg"))); // NOI18N
        addButton.setText("    Add ");
        addButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addButtonActionPerformed(evt);
            }
        });

        editButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/buyer/4.jpg"))); // NOI18N
        editButton.setText("   Edit");
        editButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editButtonActionPerformed(evt);
            }
        });

        deleteButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/buyer/6.jpg"))); // NOI18N
        deleteButton.setText("   Delete ");
        deleteButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteButtonActionPerformed(evt);
            }
        });

        clearButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/buyer/1.jpg"))); // NOI18N
        clearButton.setText("   Clear ");
        clearButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearButtonActionPerformed(evt);
            }
        });

        refreshButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/buyer/2.jpg"))); // NOI18N
        refreshButton.setText("   Refresh");
        refreshButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                refreshButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(addButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(editButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(deleteButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(clearButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(refreshButton, javax.swing.GroupLayout.DEFAULT_SIZE, 108, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addComponent(addButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(editButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(deleteButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(clearButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(refreshButton)
                .addContainerGap(71, Short.MAX_VALUE))
        );

        searchText.setText("Search...");
        searchText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchTextActionPerformed(evt);
            }
        });

        searchButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/buyer/3.jpg"))); // NOI18N
        searchButton.setBorderPainted(false);
        searchButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(searchText, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(searchButton, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(searchText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(searchButton, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(72, 72, 72))
        );

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder("Item Information"));

        codeText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                codeTextActionPerformed(evt);
            }
        });

        priceText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                priceTextActionPerformed(evt);
            }
        });

        descriptionText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                descriptionTextActionPerformed(evt);
            }
        });

        qtyText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                qtyTextActionPerformed(evt);
            }
        });

        reorderText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                reorderTextActionPerformed(evt);
            }
        });

        jLabel1.setText("Item Code");

        jLabel3.setText("Description");

        jLabel10.setText("Unit Price");

        jLabel11.setText("Qty On Hand");

        jLabel12.setText("Reorder Level");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel12))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 18, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(codeText, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 162, Short.MAX_VALUE)
                    .addComponent(priceText, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(descriptionText)
                    .addComponent(reorderText)
                    .addComponent(qtyText))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(51, 51, 51)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(7, 7, 7)
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(7, 7, 7)
                        .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(7, 7, 7)
                        .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(codeText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(6, 6, 6)
                        .addComponent(descriptionText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(6, 6, 6)
                        .addComponent(priceText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(6, 6, 6)
                        .addComponent(qtyText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(reorderText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder("Preview"));

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Item Code", "Description", "Unit Price", "Qty On Hand", "Reorder Level"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.Double.class, java.lang.Integer.class, java.lang.Integer.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING)
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(76, 76, 76)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(83, Short.MAX_VALUE))
        );

        jLabel13.setFont(new java.awt.Font("Agency FB", 1, 14)); // NOI18N
        jLabel13.setText("Search");

        jLabel14.setFont(new java.awt.Font("Agency FB", 1, 14)); // NOI18N
        jLabel14.setText("Item Information");

        javax.swing.GroupLayout jXImagePanel1Layout = new javax.swing.GroupLayout(jXImagePanel1);
        jXImagePanel1.setLayout(jXImagePanel1Layout);
        jXImagePanel1Layout.setHorizontalGroup(
            jXImagePanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 198, Short.MAX_VALUE)
        );
        jXImagePanel1Layout.setVerticalGroup(
            jXImagePanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 39, Short.MAX_VALUE)
        );

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/buyer/7.jpg"))); // NOI18N
        jButton1.setBorderPainted(false);
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/buyer/8.jpg"))); // NOI18N
        jButton2.setBorderPainted(false);

        jLabel2.setFont(new java.awt.Font("Sylfaen", 3, 24)); // NOI18N
        jLabel2.setText("Item");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(111, 111, 111)
                        .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addComponent(jSeparator1)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel2)
                .addGap(284, 284, 284)
                .addComponent(jXImagePanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jXImagePanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(8, 8, 8)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)))
                    .addComponent(jLabel2))
                .addGap(8, 8, 8)
                .addComponent(jSeparator1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel13, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, 421, Short.MAX_VALUE)
                            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(37, 37, 37)
                        .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void addButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addButtonActionPerformed

        String code = codeText.getText();
        double price = 0;
        int qty = 0;
        int reorder = 0;
        String description = descriptionText.getText();

        try {
            price = Double.parseDouble(priceText.getText());
            qty = Integer.parseInt(qtyText.getText());
            reorder = Integer.parseInt(reorderText.getText());
        } catch (NumberFormatException nm) {
            //JOptionPane.showMessageDialog(this, "Wrong Input..");
        }

        Item item = new Item(code, description, price, qty, reorder);

        try {
            if (ItemUtilities.addsearchItem(code) == null) {
                if (ValidationItem.isValidItemCode(code) && ValidationItem.isValidDescription(description) && ValidationItem.isValidPrice(priceText.getText()) && ValidationItem.isValidQty(qtyText.getText()) && ValidationItem.isValidROL(reorderText.getText())) {
                    validator.removeWarning(codeText);

                    int rows = ItemUtilities.addItem(item);
                    if (rows > 0) {
                        JOptionPane.showMessageDialog(ItemForm.this, "Successfully Addedd.");
                    }

                } else if (!ValidationItem.isValidItemCode(code)) {
                    validator.addWarning(codeText);
                    JOptionPane.showMessageDialog(ItemForm.this, "The Item Code already entered wrong.");
                } else if (!ValidationItem.isValidDescription(description)) {
                    validator.addWarning(descriptionText);
                    JOptionPane.showMessageDialog(ItemForm.this, "The Item Description already entered wrong.");
                } else if (!ValidationItem.isValidPrice(priceText.getText())) {
                    validator.addWarning(priceText);
                    JOptionPane.showMessageDialog(ItemForm.this, "The Price already entered wrong.");
                } else if (!ValidationItem.isValidQty(qtyText.getText())) {
                    validator.addWarning(qtyText);
                    JOptionPane.showMessageDialog(ItemForm.this, "The Qty already entered wrong.");
                } else if (!ValidationItem.isValidROL(reorderText.getText())) {
                    validator.addWarning(reorderText);
                    JOptionPane.showMessageDialog(ItemForm.this, "The Reorder Level already entered wrong.");
                } else {
                    JOptionPane.showMessageDialog(ItemForm.this, "The data already entered wrong.");
                }

            } else {
                validator.addWarning(codeText);
                JOptionPane.showMessageDialog(ItemForm.this, "The Item Code you have entered is in the database.");
            }
        } catch (SQLException ex) {
            
        }

    }//GEN-LAST:event_addButtonActionPerformed

    private void editButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editButtonActionPerformed
        String code = codeText.getText();
        double price = 0;
        int qty = 0;
        int reorder = 0;
        String description = descriptionText.getText();

        try {
            price = Double.parseDouble(priceText.getText());
            qty = Integer.parseInt(qtyText.getText());
            reorder = Integer.parseInt(reorderText.getText());
        } catch (NumberFormatException nm) {
            //JOptionPane.showMessageDialog(this, "Wrong Input..");
        }

        Item item = new Item(code, description, price, qty, reorder);

        try {

            Object[] options = {"Yes", "No", "Cancel"};
            int res = JOptionPane.showOptionDialog(null, "Do you want to save the changes to Item?", "Update Item", JOptionPane.DEFAULT_OPTION, JOptionPane.WARNING_MESSAGE, null, options, options[0]);

            if (res == JOptionPane.YES_OPTION) {

                if (ItemUtilities.addsearchItem(code) != null) {

                    if (ValidationItem.isValidItemCode(code) && ValidationItem.isValidDescription(description) && ValidationItem.isValidPrice(priceText.getText()) && ValidationItem.isValidQty(qtyText.getText()) && ValidationItem.isValidROL(reorderText.getText())) {

                        int rows = ItemUtilities.updateItem(item);
                        if (rows > 0) {
                            JOptionPane.showMessageDialog(ItemForm.this, "Update successfully");
                        } else {
                            JOptionPane.showMessageDialog(ItemForm.this, "No such Item : " + code);
                        }

                    } else if (!ValidationItem.isValidItemCode(code)) {
                        validator.addWarning(codeText);
                        JOptionPane.showMessageDialog(ItemForm.this, "The Item Code already entered wrong.");
                    } else if (!ValidationItem.isValidDescription(description)) {
                        validator.addWarning(descriptionText);
                        JOptionPane.showMessageDialog(ItemForm.this, "The Item Description already entered wrong.");
                    } else if (!ValidationItem.isValidPrice(priceText.getText())) {
                        validator.addWarning(priceText);
                        JOptionPane.showMessageDialog(ItemForm.this, "The Price already entered wrong.");
                    } else if (!ValidationItem.isValidQty(qtyText.getText())) {
                        validator.addWarning(qtyText);
                        JOptionPane.showMessageDialog(ItemForm.this, "The Qty already entered wrong.");
                    } else if (!ValidationItem.isValidROL(reorderText.getText())) {
                        validator.addWarning(reorderText);
                        JOptionPane.showMessageDialog(ItemForm.this, "The Reorder Level already entered wrong.");
                    } else {
                        JOptionPane.showMessageDialog(ItemForm.this, "The data already entered wrong.");
                    }
                } else {
                    JOptionPane.showMessageDialog(ItemForm.this, "The Item Code you have entered is not in the database.");
                }
            }
            if (res == JOptionPane.NO_OPTION) {

                ItemForm.this.setVisible(false);

            }

        } catch (SQLException e) {
            JOptionPane.showMessageDialog(ItemForm.this, "Wrong SQL");
            //e.printStackTrace();
        }

    }//GEN-LAST:event_editButtonActionPerformed

    private void deleteButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteButtonActionPerformed

        String code = codeText.getText();
        Item item = new Item(code);

        try {

            Object[] options = {"Yes", "No", "Cancel"};
            int option = JOptionPane.showOptionDialog(null, "Are you sure you want to permanently delete this Item?", "Delete Item", JOptionPane.DEFAULT_OPTION, JOptionPane.WARNING_MESSAGE, null, options, options[0]);

            if (option == JOptionPane.YES_OPTION) {

                int rows = ItemUtilities.deleteItem(item);
                if (rows > 0) {
                    JOptionPane.showMessageDialog(ItemForm.this, "Deleted successfully");
                } else {
                    JOptionPane.showMessageDialog(ItemForm.this, "No such Item : " + code);
                }
            }

        } catch (SQLException e) {
            JOptionPane.showMessageDialog(ItemForm.this, "Wrong SQL");
           // e.printStackTrace();
        }
    }//GEN-LAST:event_deleteButtonActionPerformed

    private void clearButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearButtonActionPerformed

        validator.removeWarning(codeText);
        validator.removeWarning(descriptionText);
        validator.removeWarning(priceText);
        validator.removeWarning(qtyText);
        validator.removeWarning(reorderText);

        codeText.setText("");
        descriptionText.setText("");
        priceText.setText("");
        qtyText.setText("");
        reorderText.setText("");

    }//GEN-LAST:event_clearButtonActionPerformed

    private void refreshButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refreshButtonActionPerformed

        jTable1.clearSelection();
        int row_count = jTable1.getRowCount();

        for (int i = 0; i < row_count; i++) {

            ((DefaultTableModel) jTable1.getModel()).removeRow(0);

        }
        ItemUtilities.viewItem(jTable1, "select * from Item");
        
        validator.removeWarning(codeText);
        validator.removeWarning(descriptionText);
        validator.removeWarning(priceText);
        validator.removeWarning(qtyText);
        validator.removeWarning(reorderText);
//        if (evt.getSource() == addButton) {
//        }
    }//GEN-LAST:event_refreshButtonActionPerformed

    private void searchButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchButtonActionPerformed

        if (searchText.getText().isEmpty()) {
            searchText.setText("Search...");
        }
        String search = searchText.getText();

        try {

            Item item = ItemUtilities.searchItem(search);
            if (item != null) {
                codeText.setText(search);
                descriptionText.setText(item.getDescription());
                priceText.setText(item.getUnitPrice() + "");
                qtyText.setText(item.getQty() + "");
                reorderText.setText(item.getReorderLevel() + "");

            } else {
                JOptionPane.showMessageDialog(ItemForm.this, "No Such Item :" + search);
            }
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(ItemForm.this, "Wrong sql");
        }
    }//GEN-LAST:event_searchButtonActionPerformed

    private void searchTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchTextActionPerformed

        if (searchText.getText().isEmpty()) {
            searchText.setText("Search...");
        }
        String search = searchText.getText();

        try {

            Item item = ItemUtilities.searchItem(search);
            if (item != null) {
                codeText.setText(search);
                descriptionText.setText(item.getDescription());
                priceText.setText(item.getUnitPrice() + "");
                qtyText.setText(item.getQty() + "");
                reorderText.setText(item.getReorderLevel() + "");

            } else {
                JOptionPane.showMessageDialog(ItemForm.this, "No Such Item :" + search);
            }
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(ItemForm.this, "Wrong sql");
        }
    }//GEN-LAST:event_searchTextActionPerformed

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked

        int selectedRow = jTable1.getSelectedRow();
        if (selectedRow == -1) {
            JOptionPane.showMessageDialog(ItemForm.this, "non selected row");
        }
        if (selectedRow != -1) {

            String code = (String) jTable1.getValueAt(selectedRow, 0);
            // JOptionPane.showMessageDialog(Form.this, "selected value :" + id);

            try {

                Item item = ItemUtilities.searchItem(code);

                if (item != null) {
                    codeText.setText(item.getItemcode());
                    descriptionText.setText(item.getDescription());
                    priceText.setText(item.getUnitPrice() + "");
                    qtyText.setText(item.getQty() + "");
                    reorderText.setText(item.getReorderLevel() + "");


                } else {
                    JOptionPane.showMessageDialog(ItemForm.this, "No Such Item :" + code);
                }
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(ItemForm.this, "Wrong sql");
            }
        }
        
        validator.removeWarning(codeText);
        validator.removeWarning(descriptionText);
        validator.removeWarning(priceText);
        validator.removeWarning(qtyText);
        validator.removeWarning(reorderText);
    }//GEN-LAST:event_jTable1MouseClicked

    private void codeTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_codeTextActionPerformed

        String code = codeText.getText();
        if (!ValidationItem.isValidItemCode(code)) {
            validator.addWarning(codeText);
            codeText.setText("");
        } else {
            descriptionText.requestFocus();
            validator.removeWarning(codeText);
        }
    }//GEN-LAST:event_codeTextActionPerformed

    private void descriptionTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_descriptionTextActionPerformed
        String description = descriptionText.getText();
        if (!ValidationItem.isValidDescription(description)) {
            validator.addWarning(descriptionText);
            descriptionText.setText("");
        } else {
            priceText.requestFocus();
            validator.removeWarning(descriptionText);
        }
    }//GEN-LAST:event_descriptionTextActionPerformed

    private void priceTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_priceTextActionPerformed
        String price = priceText.getText();
        if (!ValidationItem.isValidPrice(price)) {
            validator.addWarning(priceText);
            priceText.setText("");
        } else {
            qtyText.requestFocus();
            validator.removeWarning(priceText);
        }
    }//GEN-LAST:event_priceTextActionPerformed

    private void qtyTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_qtyTextActionPerformed
        String qty = qtyText.getText();
        if (!ValidationItem.isValidQty(qty)) {
            validator.addWarning(qtyText);
            qtyText.setText("");
        } else {
            reorderText.requestFocus();
            validator.removeWarning(qtyText);
        }
    }//GEN-LAST:event_qtyTextActionPerformed

    private void reorderTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_reorderTextActionPerformed
        String reorder = reorderText.getText();
        if (!ValidationItem.isValidROL(reorder)) {
            validator.addWarning(reorderText);
            reorderText.setText("");
        } else {
            validator.removeWarning(reorderText);
        }
    }//GEN-LAST:event_reorderTextActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        ItemForm.this.setVisible(false);
       
        if (mm == null) {
            mm = new MainMenu();
            mm.setVisible(true);
        } else {
            mm.setVisible(true);
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        int res = JOptionPane.showConfirmDialog(this, "Do you want to Exit ?");
        if (res == JOptionPane.YES_OPTION) {
            System.exit(0);
        }
    }//GEN-LAST:event_formWindowClosing

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /*
         * Set the Nimbus look and feel
         */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /*
         * If Nimbus (introduced in Java SE 6) is not available, stay with the
         * default look and feel. For details see
         * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ItemForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ItemForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ItemForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ItemForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /*
         * Create and display the dialog
         */
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                try {
                    try {
                        UIManager.setLookAndFeel(new SyntheticaBlueMoonLookAndFeel());
                    } catch (UnsupportedLookAndFeelException ex) {
                        Logger.getLogger(ItemForm.class.getName()).log(Level.SEVERE, null, ex);
                    }
                } catch (ParseException ex) {
                    Logger.getLogger(ItemForm.class.getName()).log(Level.SEVERE, null, ex);
                }
                ItemForm dialog = new ItemForm(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {

                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addButton;
    private javax.swing.JButton clearButton;
    private javax.swing.JTextField codeText;
    private javax.swing.JButton deleteButton;
    private javax.swing.JTextField descriptionText;
    private javax.swing.JButton editButton;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTable jTable1;
    private org.jdesktop.swingx.JXImagePanel jXImagePanel1;
    private javax.swing.JTextField priceText;
    private javax.swing.JTextField qtyText;
    private javax.swing.JButton refreshButton;
    private javax.swing.JTextField reorderText;
    private javax.swing.JButton searchButton;
    private javax.swing.JTextField searchText;
    // End of variables declaration//GEN-END:variables
}
